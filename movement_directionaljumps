using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Movement : MonoBehaviour
{
    [SerializeField] private float playerSpeed;
    [SerializeField] private float maxSpeed;
    [SerializeField] private float jumpForce; // Jump force
    private Rigidbody2D body;
    private SpriteRenderer spriteRenderer;
    private Animator animator;
    private bool isGrounded; // To check if player is on the ground
    private float moveInput = 0f;
    private void Start()
    {
        body = GetComponent<Rigidbody2D>();
        spriteRenderer = GetComponent<SpriteRenderer>();
        animator = GetComponent<Animator>();
    }

    private void FixedUpdate()
    {
        // Handle horizontal movement
        
        if (Input.GetKey(KeyCode.A) && isGrounded == true)
        {
            moveInput = -1f; 
        }
        else if (Input.GetKey(KeyCode.D) && isGrounded == true)
        {
            moveInput = 1f; 
        }
        else if(isGrounded) {
        
            moveInput = 0f;
        }

        //  horizontal movement
        body.velocity = new Vector2(moveInput * playerSpeed, body.velocity.y);

        //  jumping
        if (Input.GetKey(KeyCode.Space) && isGrounded)
        {
            jump();
            
        }
        
            // limit horizontal velocity
            body.velocity = new Vector2(Mathf.Clamp(body.velocity.x, -maxSpeed, maxSpeed), body.velocity.y);
        
        // Flip the sprite based on the direction of movement
        if (body.velocity.x > 0)
        {
            spriteRenderer.flipX = false; 
        }
        else if (body.velocity.x < 0)
        {
            spriteRenderer.flipX = true; 
        }
        animator.SetBool("running", moveInput != 0);
        animator.SetBool("jumping", !isGrounded);
    }

    private void jump()
    {
            body.velocity = new Vector2( moveInput * playerSpeed, jumpForce); // Apply jump impulse
            isGrounded = false;
        }
    private void OnCollisionEnter2D(Collision2D collision)
    {
        if(collision.gameObject.tag == "ground")
        {
            isGrounded = true;
        }
    }

    }

